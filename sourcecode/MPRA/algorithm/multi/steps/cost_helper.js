const fs = require('fs');
const path = require('path');
const { logStepToFile } = require('./log_helper'); // H√†m ƒë√£ d√πng tr∆∞·ªõc ƒë√≥

const WORK_HOURS_PER_DAY = 8;

// T√≠nh th·ªùi l∆∞·ª£ng task (gi·ªù) d·ª±a v√†o startTime, endTime
function getTaskDurationInHours(task) {
  const start = new Date(task.startTime);
  const end = new Date(task.endTime);
  const msDiff = end - start;
  const days = msDiff / (1000 * 60 * 60 * 24);
  return days * WORK_HOURS_PER_DAY;
}

// T√≠nh chi ph√≠ c·ªßa task = th·ªùi l∆∞·ª£ng * cost m·ªói gi·ªù c·ªßa assignee
function calculateCostPerTask(task) {
  if (!task.assignee || !task.startTime || !task.endTime) {
    task.cost = 0;
    return 0;
  }

  const durationHours = getTaskDurationInHours(task);
  const rate = task.assignee.costPerHour || 0;
  const cost = durationHours * rate;
  task.cost = +cost.toFixed(2); // L√†m tr√≤n 2 ch·ªØ s·ªë
  return task.cost;
}

// Ghi log chi ph√≠ t·ª´ng task v√† t·ªïng chi ph√≠ c·ªßa 1 project
function logCostByProject(project) {
  let total = 0;
  const lines = [`üí∞ Chi ph√≠ d·ª± ki·∫øn cho project ${project.projectKey}\n`];

  for (const task of project.tasks) {
    const cost = calculateCostPerTask(task);
    total += cost;

    lines.push(`- Task [#${task.id}] ‚Äì ${task.name || ''}`);
    lines.push(`  + Assignee: ${task.assignee?.id || 'Unassigned'}`);
    lines.push(`  + Time: ${task.startTime || '---'} ‚Üí ${task.endTime || '---'}`);
    lines.push(`  + Cost: ${cost.toFixed(2)} ƒë\n`);
  }

  lines.push(`\nüßæ T·ªïng chi ph√≠: ${total.toFixed(2)} ƒë`);
  logStepToFile(`cost_${project.projectKey}`, lines.join('\n'));
}

module.exports = {
  calculateCostPerTask,
  logCostByProject,
  getTaskDurationInHours
};
